{"ast":null,"code":"import { first, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CoursesService {\n  constructor(http) {\n    this.http = http;\n    this.API = \"./../../assets/_mockup_services/courses.json\";\n  }\n  list() {\n    return this.http.get(this.API).pipe(first(), tap(localCourses => console.log(localCourses)));\n  }\n  static #_ = this.ɵfac = function CoursesService_Factory(t) {\n    return new (t || CoursesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CoursesService,\n    factory: CoursesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["first","tap","CoursesService","constructor","http","API","list","get","pipe","localCourses","console","log","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\_Angular\\FullStack_Angular_and_Spring\\frontEnd\\src\\app\\courses\\courses.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n<<<<<<< HEAD\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, first, from, tap } from 'rxjs';\r\n=======\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { catchError, delay, first, of, tap } from 'rxjs';\r\nimport { IErrorsHttpModel } from '../_share/_models/iErrorsHttp-model';\r\nimport { ErrorDialogComponent } from '../_share/components-material/error-dialog/error-dialog.component';\r\nimport { ICoursesModel } from './../_share/_models/iCourses-model';\r\n>>>>>>> 7231dfd1fef31d6380c3ea53c18e0adc2df9e793\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoursesService {\r\n  private readonly API = \"./../../assets/_mockup_services/courses.json\";\r\n\r\n<<<<<<< HEAD\r\n  constructor(private http: HttpClient) { }\r\n\r\n  list(): Observable<ICoursesModel[]> \r\n   {\r\n    return this.http.get<ICoursesModel[]>(this.API)\r\n      .pipe(first(),tap(localCourses => console.log(localCourses)));\r\n  }\r\n=======\r\n/**Dialog fpoi oserviço criado para abrir a PopUp de error, aqui pelo Service sem ter que ir para compoment */\r\n  constructor(private http: HttpClient, public dialog: MatDialog) { }\r\n\r\n  list() {\r\n    return this.http.get<ICoursesModel[]>(this.API)\r\n      .pipe(\r\n        first(), //just get 1 subscrition, after that close the conection\r\n        delay(1000), // create a delay to see the spinner in front 3s\r\n        tap(localCourses => console.log(localCourses)),\r\n        catchError(e => {\r\n          //  console.error(\"Error Course: \", e.name)\r\n          this.openDialogError({ ...e })\r\n          /**Precisamos devolver um observable, mesmo q seja um Array vazio */\r\n          return of([])\r\n        }))\r\n\r\n  }\r\n\r\n\r\n  /**Method to load Error Modal */\r\n\r\n  openDialogError(errorMsg: IErrorsHttpModel) {\r\n    this.dialog.open(ErrorDialogComponent, {\r\n      data: errorMsg,\r\n    });\r\n  }\r\n\r\n>>>>>>> 7231dfd1fef31d6380c3ea53c18e0adc2df9e793\r\n\r\n\r\n\r\n}\r\n"],"mappings":"AAIA,SAAqBA,KAAK,EAAQC,GAAG,QAAQ,MAAM;;;AAYnD,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHP,KAAAC,GAAG,GAAG,8CAA8C;EAG7B;EAExCC,IAAIA,CAAA;IAEF,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAkB,IAAI,CAACF,GAAG,CAAC,CAC5CG,IAAI,CAACR,KAAK,EAAE,EAACC,GAAG,CAACQ,YAAY,IAAIC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC,CAAC,CAAC;EACjE;EAAC,QAAAG,CAAA,G;qBAVUV,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdf,cAAc;IAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}